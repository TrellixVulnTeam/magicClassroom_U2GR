# Placement Class
## Descriptions
This class takes in an object size, how it wants to be positioned, and what is being used to point at where the object should be placed (ie, the controller pointing at the floor). Once started, the script performs a raycast from the controller, and checks a plethora of requirements. It will register scanned world mesh, and will check if what you are hitting is a wall or horizontal. It will also check if the surface is large enough to fit the object, among other things. As you attempt to find a place to put the object, the script will call an event every time the fit changes, so the object can change colors to indicate it is in a good or bad place by recieving those events. Finally, a confirm function stops the script and calls a handler function to which it passes the final position and rotation found for the object.

---

### Enums
| Enum Name | Values |
| ------- | ------- |
| SurfaceType | {Unknown, Horizontal, Vertical, Slanted} |
| FitType | {Unknown, Fits, NoSurface, Uneven, Overhang, VolumeIntersection, WrongOrientation} |

---

### Public Properties
| Type | Property Name | Description |
| ----------- | ----------- | ----------- |  
| bool | IsRunning | The Active Status of the script |
| FitType | Fit | Current fit status based on placement object position and collisions |
| Vector3 | Position | The current position of the placement object |
| Vector3 | AdjustedPosition | Adjusted position based on the currend placement location |
| Quaternion | Rotation | Orientation of the placement Object |
| SurfaceType | Surface | The SurfaceType of the placement Object, where it can be placed |
| Vector3 | Scale | Scale of the placement Object |
| bool | OrientToGravity | Whether the placement object should orient to match gravity |

---

### Public Events

| Event Name| Event Type | Description |
| ------ | ------ | ------ |
| OnPlacementBegin | Action<GameObject> | Event sent to the sourceTransform object once placement starts |
| OnPlacementEvent | Action<FitType> | Called every time the Fit is updated as the placement script checks placement. can be used to position that object when a semi-valid fit is found, or indicate the that current position is a successful fit |

---

### Public Functions
| Return Type | Function Header | Description |
| ------- | ------- | ------- |
| void | Place(Transform placementSource, Vector3 scale, bool allowHorizontal, bool allowVertical, System.Action<Vector3, Quaternion> **callback**) | Begins the placement attemp. The **callback** provides position and rotation of the placement object |

#### Arguments
- placementSource : The transform of the object to raycast from to find placement locations
- scale : The extents of the object to be placed, its size
- allowHorizontal: Allow placement on horizontal surfaces
- allowVertical: Allow placement on Vertical surfaces
- callback : Event handler that is called once Confirm() is called on a FitType of Fit, meaning a correct placement has been confirmed. The callback allows the object to be positioned there once it has been confirmed.

| Return Type | Function Header | Description | 
| ------- | ------- | ------- |
| void | Cancel() | Cancels placement and stops updating |
| void | Resume() | Resumes placement and restarts updating |
| void | Confirm() | If the fit type is correct, stops running and executes the callback |

---

[Test Link](test.md)
