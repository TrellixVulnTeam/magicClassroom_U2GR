<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ml__mediaplayer__plugin__drm_8cpp" kind="file" language="C++">
    <compoundname>ml_mediaplayer_plugin_drm.cpp</compoundname>
    <includes refid="ml__mediaplayer__plugin__drm_8h" local="yes">ml_mediaplayer_plugin_drm.h</includes>
    <includes refid="ml__mediaplayer__plugin__media__capi_8h" local="yes">ml_mediaplayer_plugin_media_capi.h</includes>
    <incdepgraph>
      <node id="78">
        <label>EGL/eglext.h</label>
      </node>
      <node id="80">
        <label>GLES2/gl2ext.h</label>
      </node>
      <node id="85">
        <label>IUnityInterface.h</label>
        <link refid="_lumin_media_player_2_external_2_apis_2_media_player_plugin_2_i_unity_interface_8h_source"/>
      </node>
      <node id="74">
        <label>string</label>
      </node>
      <node id="76">
        <label>map</label>
      </node>
      <node id="68">
        <label>/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp</label>
        <link refid="ml__mediaplayer__plugin__drm_8cpp"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>ml_mediaplayer_plugin_drm.h</label>
        <link refid="ml__mediaplayer__plugin__drm_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>ml_mediaplayer_plugin_media_capi.h</label>
        <link refid="ml__mediaplayer__plugin__media__capi_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>IUnityGraphics.h</label>
        <link refid="_lumin_media_player_2_external_2_apis_2_media_player_plugin_2_i_unity_graphics_8h_source"/>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>pthread.h</label>
      </node>
      <node id="72">
        <label>unistd.h</label>
      </node>
      <node id="70">
        <label>ml_mediaplayer_plugin_common.h</label>
        <link refid="ml__mediaplayer__plugin__common_8h_source"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>vector</label>
      </node>
      <node id="83">
        <label>ml_media_cea608_caption.h</label>
      </node>
      <node id="79">
        <label>GLES2/gl2.h</label>
      </node>
      <node id="82">
        <label>ml_media_player.h</label>
      </node>
      <node id="77">
        <label>EGL/egl.h</label>
      </node>
      <node id="88">
        <label>ml_platform.h</label>
      </node>
      <node id="87">
        <label>ml_media_format.h</label>
      </node>
      <node id="81">
        <label>ml_logging.h</label>
      </node>
      <node id="73">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ml__mediaplayer__plugin__drm_8cpp_1aaa923d0fca992a311524402e11f107e4" prot="public" static="yes" mutable="no">
        <type>MLHandle</type>
        <definition>MLHandle _activation_drm_handle</definition>
        <argsstring></argsstring>
        <name>_activation_drm_handle</name>
        <initializer>= ML_INVALID_HANDLE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="6" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ml__mediaplayer__plugin__drm_8cpp_1a76cb0a03d6d202bf65dc1ffa7cfd9c8e" prot="public" static="yes" mutable="no">
        <type>MLMediaDRMRequestMessage</type>
        <definition>MLMediaDRMRequestMessage _activation_drm_request</definition>
        <argsstring></argsstring>
        <name>_activation_drm_request</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="7" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a367fd468ebb184e2c36ea5aa730e9eb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>static MLResult GetProvisionRequestInternal</definition>
        <argsstring>(const MLHandle drm_handle, MLMediaDRMRequestMessage *drm_request, const char *cert_type, uint8_t **out_request_message, size_t *out_request_message_length, char **out_default_url)</argsstring>
        <name>GetProvisionRequestInternal</name>
        <param>
          <type>const MLHandle</type>
          <declname>drm_handle</declname>
        </param>
        <param>
          <type>MLMediaDRMRequestMessage *</type>
          <declname>drm_request</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cert_type</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>out_request_message</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_request_message_length</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out_default_url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="9" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="9" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a686cee3941f16098a6eaa2b6d510728f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>static MLResult ProvideProvisionResponseInternal</definition>
        <argsstring>(const MLHandle drm_handle, MLMediaDRMRequestMessage *drm_request, uint8_t *response_message, size_t response_message_length)</argsstring>
        <name>ProvideProvisionResponseInternal</name>
        <param>
          <type>const MLHandle</type>
          <declname>drm_handle</declname>
        </param>
        <param>
          <type>MLMediaDRMRequestMessage *</type>
          <declname>drm_request</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>response_message</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>response_message_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="29" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="29" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1aadfc67b780d17ea6f40c4e48ec52e7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult OpenDRMSession</definition>
        <argsstring>(const int media_player_id, const MediaPlayerDRMIndex drmIndex)</argsstring>
        <name>OpenDRMSession</name>
        <param>
          <type>const int</type>
          <declname>media_player_id</declname>
        </param>
        <param>
          <type>const MediaPlayerDRMIndex</type>
          <declname>drmIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="52" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="52" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a5ec0fc41640eb6d113dec8ea40808fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult CloseDRMSession</definition>
        <argsstring>(const int media_player_id, const MediaPlayerDRMIndex drmIndex)</argsstring>
        <name>CloseDRMSession</name>
        <param>
          <type>const int</type>
          <declname>media_player_id</declname>
        </param>
        <param>
          <type>const MediaPlayerDRMIndex</type>
          <declname>drmIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="69" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="69" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a4798887142a1d71641baa6539db80ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult GetProvisionRequest</definition>
        <argsstring>(const int media_player_id, const char *cert_type, uint8_t **out_request_message, size_t *out_request_message_length, char **out_default_url)</argsstring>
        <name>GetProvisionRequest</name>
        <param>
          <type>const int</type>
          <declname>media_player_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cert_type</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>out_request_message</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_request_message_length</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out_default_url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="86" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="86" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1afa05621e1291d40665489048080814db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult ProvideProvisionResponse</definition>
        <argsstring>(const int media_player_id, uint8_t *response_message, size_t response_message_length)</argsstring>
        <name>ProvideProvisionResponse</name>
        <param>
          <type>const int</type>
          <declname>media_player_id</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>response_message</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>response_message_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="105" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a3a170ebabc70a6f287763216dbf87306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult GetActivationProvisionRequest</definition>
        <argsstring>(const char *cert_type, uint8_t **out_request_message, size_t *out_request_message_length, char **out_default_url)</argsstring>
        <name>GetActivationProvisionRequest</name>
        <param>
          <type>const char *</type>
          <declname>cert_type</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>out_request_message</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_request_message_length</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out_default_url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="112" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="112" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a8fdd4827717ce7ee58053be0cca3fcb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult ProvideActivationProvisionResponse</definition>
        <argsstring>(uint8_t *response_message, size_t response_message_length)</argsstring>
        <name>ProvideActivationProvisionResponse</name>
        <param>
          <type>uint8_t *</type>
          <declname>response_message</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>response_message_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="130" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a33e85614e82a6b11b2c77d255cfdf0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult SetKeyRequestCustomData</definition>
        <argsstring>(const int media_player_id, const MediaPlayerDRMIndex drmIndex, const char *keys[], const char *values[], size_t pair_count)</argsstring>
        <name>SetKeyRequestCustomData</name>
        <param>
          <type>const int</type>
          <declname>media_player_id</declname>
        </param>
        <param>
          <type>const MediaPlayerDRMIndex</type>
          <declname>drmIndex</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>keys</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const char *</type>
          <declname>values</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>pair_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="135" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="135" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a8926df3aab8008025bc53d2daff64da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult GetActivationKeyRequest</definition>
        <argsstring>(const MLUUID *drm_uuid, const MLMediaDRMKeyType key_type, uint8_t **out_request_message, size_t *out_request_message_length, char **out_default_url)</argsstring>
        <name>GetActivationKeyRequest</name>
        <param>
          <type>const MLUUID *</type>
          <declname>drm_uuid</declname>
        </param>
        <param>
          <type>const MLMediaDRMKeyType</type>
          <declname>key_type</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>out_request_message</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_request_message_length</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out_default_url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="175" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="175" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1acf51f0d974219dd7c6f9bcba253f2bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult GetKeyRequest</definition>
        <argsstring>(const int media_player_id, const MediaPlayerDRMIndex drmIndex, MLMediaDRMKeyType key_type, uint8_t **out_request_message, size_t *out_request_message_length, char **out_default_url)</argsstring>
        <name>GetKeyRequest</name>
        <param>
          <type>const int</type>
          <declname>media_player_id</declname>
        </param>
        <param>
          <type>const MediaPlayerDRMIndex</type>
          <declname>drmIndex</declname>
        </param>
        <param>
          <type>MLMediaDRMKeyType</type>
          <declname>key_type</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>out_request_message</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_request_message_length</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out_default_url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="258" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="258" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a4ce86cb0da14bf009e16d9b792adcba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult ProvideKeyResponse</definition>
        <argsstring>(const int media_player_id, const MediaPlayerDRMIndex drmIndex, uint8_t *response_message, size_t response_message_length)</argsstring>
        <name>ProvideKeyResponse</name>
        <param>
          <type>const int</type>
          <declname>media_player_id</declname>
        </param>
        <param>
          <type>const MediaPlayerDRMIndex</type>
          <declname>drmIndex</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>response_message</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>response_message_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="343" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="343" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="ml__mediaplayer__plugin__drm_8cpp_1a87d23cf3a9e1ad78535ddbafac38faf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MLResult</type>
        <definition>MLResult PrepareDRM</definition>
        <argsstring>(const int media_player_id, const MediaPlayerDRMIndex drmIndex)</argsstring>
        <name>PrepareDRM</name>
        <param>
          <type>const int</type>
          <declname>media_player_id</declname>
        </param>
        <param>
          <type>const MediaPlayerDRMIndex</type>
          <declname>drmIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" line="360" column="1" bodyfile="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp" bodystart="360" bodyend="381"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ml_mediaplayer_plugin_drm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ml_mediaplayer_plugin_media_capi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Activation<sp/>DRM<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MLHandle<sp/>_activation_drm_handle<sp/>=<sp/>ML_INVALID_HANDLE;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MLMediaDRMRequestMessage<sp/>_activation_drm_request;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MLResult<sp/>GetProvisionRequestInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MLHandle<sp/>drm_handle,<sp/>MLMediaDRMRequestMessage<sp/>*drm_request,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cert_type,<sp/>uint8_t<sp/>**out_request_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*out_request_message_length,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out_default_url)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>result;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provision<sp/>the<sp/>device<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>ML_LOG_TAG(Debug,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>Getting<sp/>Provision<sp/>request&quot;</highlight><highlight class="normal">,__FUNCTION__);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MediaCAPI::MLMediaDRMGetProvisionRequest(drm_handle,<sp/>cert_type,<sp/>drm_request);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>values<sp/>are<sp/>only<sp/>valid<sp/>while<sp/>drm_request<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>as<sp/>a<sp/>unity<sp/>plugin,<sp/>these<sp/>get<sp/>marshaled<sp/>and<sp/>in<sp/>turn<sp/>copied<sp/>into<sp/>managed<sp/>memory,<sp/>so<sp/>no<sp/>worry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_request_message<sp/>=<sp/>drm_request-&gt;request.ptr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_request_message_length<sp/>=<sp/>drm_request-&gt;request.length;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_default_url<sp/>=<sp/>drm_request-&gt;default_URL;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MLResult<sp/>ProvideProvisionResponseInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MLHandle<sp/>drm_handle,<sp/>MLMediaDRMRequestMessage<sp/>*drm_request,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*response_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>response_message_length)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>MLMediaDRMByteArray<sp/><sp/><sp/>response<sp/>=<sp/>{<sp/>response_message,<sp/>response_message_length<sp/>};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>resources<sp/>for<sp/>the<sp/>request<sp/>message<sp/>since<sp/>we<sp/>are<sp/>now<sp/>providing<sp/>the<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>MediaCAPI::MLMediaDRMRequestMessageRelease(drm_request);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>MLMediaDRMByteArray<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_wrapped_key<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>MLMediaDRMByteArray<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_certificate<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MediaCAPI::MLMediaDRMProvideProvisionResponse(drm_handle,<sp/>&amp;response,<sp/>&amp;drm_certificate,<sp/>&amp;drm_wrapped_key);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>MediaCAPI::MLMediaDRMByteArrayRelease(&amp;drm_wrapped_key);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>MediaCAPI::MLMediaDRMByteArrayRelease(&amp;drm_certificate);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unity<sp/>mediaplayer<sp/>plugin<sp/>DRM<sp/>specific<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>OpenDRMSession(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>media_player_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MediaPlayerDRMIndex<sp/>drmIndex)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_media_player_context" kindref="compound">MediaPlayerContext</ref>*<sp/>media_player_context<sp/>=<sp/>GetOrCreateMediaPlayerContextByID(media_player_id);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/>result<sp/>=<sp/>MLMediaDRMResult_Unknown;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ML_INVALID_HANDLE<sp/>!=<sp/>media_player_context-&gt;drm_handle)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMByteArray*<sp/>drm_session_id_ptr;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_session_id_ptr<sp/>=<sp/>&amp;media_player_context-&gt;track_drm_session_id[drmIndex];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MediaCAPI::MLMediaDRMOpenSession(media_player_context-&gt;drm_handle,<sp/>drm_session_id_ptr);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>CloseDRMSession(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>media_player_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MediaPlayerDRMIndex<sp/>drmIndex)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_media_player_context" kindref="compound">MediaPlayerContext</ref>*<sp/>media_player_context<sp/>=<sp/>GetOrCreateMediaPlayerContextByID(media_player_id);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/>result<sp/>=<sp/>MLMediaDRMResult_Unknown;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ML_INVALID_HANDLE<sp/>!=<sp/>media_player_context-&gt;drm_handle)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMByteArray*<sp/>drm_session_id_ptr;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_session_id_ptr<sp/>=<sp/>&amp;media_player_context-&gt;track_drm_session_id[drmIndex];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MediaCAPI::MLMediaDRMCloseSession(media_player_context-&gt;drm_handle,<sp/>drm_session_id_ptr);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>GetProvisionRequest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>media_player_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cert_type,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>**out_request_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*out_request_message_length,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out_default_url)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_media_player_context" kindref="compound">MediaPlayerContext</ref>*<sp/>media_player_context<sp/>=<sp/>GetOrCreateMediaPlayerContextByID(media_player_id);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/>result;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provision<sp/>the<sp/>device<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Debug,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>MediaPlayerContext<sp/>%d<sp/>Getting<sp/>Provision<sp/>request&quot;</highlight><highlight class="normal">,__FUNCTION__,<sp/>media_player_context-&gt;media_player_id);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>GetProvisionRequestInternal(media_player_context-&gt;drm_handle,<sp/>&amp;media_player_context-&gt;drm_request,<sp/>cert_type,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_request_message,<sp/>out_request_message_length,<sp/>out_default_url);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>MediaPlayerContext<sp/>%d<sp/>failed<sp/>to<sp/>get<sp/>Provision<sp/>request.<sp/>Error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>media_player_context-&gt;media_player_id,<sp/>MLMediaResultGetString(result));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>ProvideProvisionResponse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>media_player_id,<sp/>uint8_t<sp/>*response_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>response_message_length)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_media_player_context" kindref="compound">MediaPlayerContext</ref>*<sp/>media_player_context<sp/>=<sp/>GetOrCreateMediaPlayerContextByID(media_player_id);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProvideProvisionResponseInternal(media_player_context-&gt;drm_handle,<sp/>&amp;media_player_context-&gt;drm_request,<sp/>response_message,<sp/>response_message_length);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>GetActivationProvisionRequest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cert_type,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>**out_request_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*out_request_message_length,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out_default_url)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/>result;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provision<sp/>the<sp/>device<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Debug,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>Getting<sp/>activation<sp/>provision<sp/>request&quot;</highlight><highlight class="normal">,__FUNCTION__);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>GetProvisionRequestInternal(_activation_drm_handle,<sp/>&amp;_activation_drm_request,<sp/>cert_type,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_request_message,<sp/>out_request_message_length,<sp/>out_default_url);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>Failed<sp/>to<sp/>get<sp/>activation<sp/>provision<sp/>request.<sp/>Error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>MLMediaResultGetString(result));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>ProvideActivationProvisionResponse(uint8_t<sp/>*response_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>response_message_length)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProvideProvisionResponseInternal(_activation_drm_handle,<sp/>&amp;_activation_drm_request,<sp/>response_message,<sp/>response_message_length);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>SetKeyRequestCustomData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>media_player_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MediaPlayerDRMIndex<sp/>drmIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>keys[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>values[],<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pair_count)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_media_player_context" kindref="compound">MediaPlayerContext</ref>*<sp/>media_player_context<sp/>=<sp/>GetOrCreateMediaPlayerContextByID(media_player_id);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MLResult_InvalidParam;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(media_player_context<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keys<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>attempt<sp/>to<sp/>release<sp/>if<sp/>there<sp/>is<sp/>something<sp/>to<sp/>release.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(media_player_context-&gt;track_drm_request_optional_params[drmIndex].ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MediaCAPI::MLMediaDRMKeyValueArrayRelease(&amp;media_player_context-&gt;track_drm_request_optional_params[drmIndex]);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MediaCAPI::MLMediaDRMKeyValueArrayAllocate(pair_count,<sp/>&amp;media_player_context-&gt;track_drm_request_optional_params[drmIndex]);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMKeyValue<sp/>pair;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>pair_count;<sp/>index++)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keys[index]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>values[index]<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair.key<sp/>=<sp/>keys[index];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair.value<sp/>=<sp/>values[index];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MediaCAPI::MLMediaDRMKeyValueArrayAdd(&amp;pair,<sp/>&amp;media_player_context-&gt;track_drm_request_optional_params[drmIndex]);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MediaCAPI::MLMediaDRMKeyValueArrayRelease(&amp;media_player_context-&gt;track_drm_request_optional_params[drmIndex]);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MLResult_InvalidParam;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>GetActivationKeyRequest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MLUUID*<sp/>drm_uuid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MLMediaDRMKeyType<sp/>key_type,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>**out_request_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*out_request_message_length,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out_default_url)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMByteArray<sp/>drm_session_id;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMKeyRequestInputParam<sp/>request_param;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/>result;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>kPssh1[]<sp/>=<sp/>{0x08,<sp/>0x01,<sp/>0x12,<sp/>0x10,<sp/>0xe0,<sp/>0x25,<sp/>0x62,<sp/>0xe0,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4c,<sp/>0xd5,<sp/>0x53,<sp/>0x51,<sp/>0xb1,<sp/>0x4b,<sp/>0x3d,<sp/>0x74,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8d,<sp/>0x36,<sp/>0xed,<sp/>0x8e};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMByteArray<sp/>pssh<sp/>=<sp/>{<sp/>(uint8_t*)<sp/>kPssh1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(kPssh1)<sp/>};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PSSH<sp/>info<sp/>as<sp/>the<sp/>init<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.init_data<sp/>=<sp/>&amp;pssh;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;cenc&quot;<sp/>as<sp/>the<sp/>mime<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>kCencMimeType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cenc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.mime_type<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)kCencMimeType;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming<sp/>key<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.key_type<sp/>=<sp/>key_type;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>to<sp/>no<sp/>optional<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.optional_params<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_activation_drm_handle<sp/>==<sp/>ML_INVALID_HANDLE)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MLMediaDRMCreate(*drm_uuid,<sp/>&amp;_activation_drm_handle);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>failed<sp/>to<sp/>create<sp/>activation<sp/>DRM<sp/>Handle.<sp/>Error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>MLMediaResultGetString(result));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MLMediaDRMOpenSession(_activation_drm_handle,<sp/>&amp;drm_session_id);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>MLMediaDRMResult_NotProvisioned)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>failed<sp/>to<sp/>open<sp/>activation<sp/>DRM<sp/>session.<sp/>Error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>MLMediaResultGetString(result));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMRelease(_activation_drm_handle);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_activation_drm_handle<sp/>=<sp/>ML_INVALID_HANDLE;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inform<sp/>user<sp/>that<sp/>device<sp/>needs<sp/>to<sp/>be<sp/>provisioned,<sp/>then<sp/>they<sp/>can<sp/>call<sp/>this<sp/>function<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>failed<sp/>to<sp/>open<sp/>activation<sp/>DRM<sp/>session.<sp/>Error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>MLMediaResultGetString(result));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMRequestMessageRelease(&amp;_activation_drm_request);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Debug,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>Getting<sp/>activation<sp/>key<sp/>request&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MLMediaDRMGetKeyRequest(_activation_drm_handle,<sp/>&amp;drm_session_id,<sp/>&amp;request_param,<sp/>&amp;_activation_drm_request);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>failed<sp/>to<sp/>get<sp/>activation<sp/>key<sp/>request.<sp/>Error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>MLMediaResultGetString(result));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>values<sp/>are<sp/>only<sp/>valid<sp/>while<sp/>media_player_context-&gt;drm_request<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>as<sp/>a<sp/>unity<sp/>plugin,<sp/>these<sp/>get<sp/>marshaled<sp/>and<sp/>in<sp/>turn<sp/>copied<sp/>into<sp/>managed<sp/>memory,<sp/>so<sp/>no<sp/>worry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_request_message<sp/>=<sp/>_activation_drm_request.request.ptr;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_request_message_length<sp/>=<sp/>_activation_drm_request.request.length;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_default_url<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_default_url<sp/>=<sp/>_activation_drm_request.default_URL;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>Got<sp/>Data!&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMCloseSession(_activation_drm_handle,<sp/>&amp;drm_session_id);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMRelease(_activation_drm_handle);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>GetKeyRequest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>media_player_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MediaPlayerDRMIndex<sp/>drmIndex,<sp/>MLMediaDRMKeyType<sp/>key_type,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>**out_request_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*out_request_message_length,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out_default_url)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_media_player_context" kindref="compound">MediaPlayerContext</ref>*<sp/>media_player_context<sp/>=<sp/>GetOrCreateMediaPlayerContextByID(media_player_id);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MediaPlayerDRMIndex<sp/>drmIndexUsed<sp/>=<sp/>drmIndex;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMByteArray*<sp/>drm_session_id_ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaPlayerPSSHEntry*<sp/>pssh_info<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pssh_info_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLUUID<sp/>*UUIDs<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>uuid_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/>result;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMKeyRequestInputParam<sp/>request_param;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMByteArray<sp/>pssh<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PSSH<sp/>info<sp/>as<sp/>the<sp/>init<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.init_data<sp/>=<sp/>&amp;pssh;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;cenc&quot;<sp/>as<sp/>the<sp/>mime<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>kCencMimeType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cenc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.mime_type<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)kCencMimeType;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streaming<sp/>key<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.key_type<sp/>=<sp/>key_type;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>to<sp/>no<sp/>optional<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.optional_params<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pssh_info<sp/>=<sp/>media_player_context-&gt;track_drm_info[drmIndexUsed]-&gt;pssh_info;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pssh_info_count<sp/>=<sp/>media_player_context-&gt;track_drm_info[drmIndexUsed]-&gt;pssh_info_count;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UUIDs<sp/>=<sp/>media_player_context-&gt;track_drm_info[drmIndexUsed]-&gt;UUIDs;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uuid_count<sp/>=<sp/>media_player_context-&gt;track_drm_info[drmIndexUsed]-&gt;uuid_count;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>some<sp/>stored<sp/>optional<sp/>parameters<sp/>to<sp/>use,<sp/>use<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(media_player_context-&gt;track_drm_request_optional_params[drmIndexUsed].ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>media_player_context-&gt;track_drm_request_optional_params[drmIndexUsed].length<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_param.optional_params<sp/>=<sp/>&amp;media_player_context-&gt;track_drm_request_optional_params[drmIndexUsed];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_session_id_ptr<sp/>=<sp/>&amp;media_player_context-&gt;track_drm_session_id[drmIndexUsed];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uuid_count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>MediaPlayerContext<sp/>%d<sp/>failed<sp/>to<sp/>find<sp/>supported<sp/>%s<sp/>DRM<sp/>Scheme&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>media_player_context-&gt;media_player_id,<sp/>MediaPlayerDRMIndexToString[drmIndexUsed]);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MLResult_InvalidParam;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>PSSH<sp/>that<sp/>matches<sp/>the<sp/>supported<sp/>UUID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>pssh_info_count;<sp/>index++)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(pssh_info[index].uuid.data,<sp/>UUIDs[0].data,<sp/>16)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>supported<sp/>DRM.<sp/>Use<sp/>this<sp/>PSSH<sp/>for<sp/>licence<sp/>acquisition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pssh.ptr<sp/>=<sp/>pssh_info[index].data;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pssh.length<sp/>=<sp/>pssh_info[index].size;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pssh.ptr<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>MediaPlayerContext<sp/>%d<sp/>failed<sp/>to<sp/>find<sp/>the<sp/>PSSH<sp/>for<sp/>the<sp/>supported<sp/>%s<sp/>DRM&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>media_player_context-&gt;media_player_id,<sp/>MediaPlayerDRMIndexToString[drmIndexUsed]);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MLResult_InvalidParam;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>any<sp/>previously<sp/>allocated<sp/>request<sp/>resources.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MediaCAPI::MLMediaDRMRequestMessageRelease(&amp;media_player_context-&gt;drm_request);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Debug,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>MediaPlayerContext<sp/>%d<sp/>Getting<sp/>%s<sp/>key<sp/>request&quot;</highlight><highlight class="normal">,<sp/>__FUNCTION__,<sp/>media_player_context-&gt;media_player_id,<sp/>MediaPlayerDRMIndexToString[drmIndexUsed]);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MediaCAPI::MLMediaDRMGetKeyRequest(media_player_context-&gt;drm_handle,<sp/>drm_session_id_ptr,<sp/>&amp;request_param,<sp/>&amp;media_player_context-&gt;drm_request);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>MediaPlayerContext<sp/>%d<sp/>failed<sp/>to<sp/>get<sp/>%s<sp/>key<sp/>request.<sp/>Error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>media_player_context-&gt;media_player_id,<sp/>MediaPlayerDRMIndexToString[drmIndexUsed],<sp/>MLMediaResultGetString(result));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>values<sp/>are<sp/>only<sp/>valid<sp/>while<sp/>media_player_context-&gt;drm_request<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>as<sp/>a<sp/>unity<sp/>plugin,<sp/>these<sp/>get<sp/>marshaled<sp/>and<sp/>in<sp/>turn<sp/>copied<sp/>into<sp/>managed<sp/>memory,<sp/>so<sp/>no<sp/>worry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_request_message<sp/>=<sp/>media_player_context-&gt;drm_request.request.ptr;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_request_message_length<sp/>=<sp/>media_player_context-&gt;drm_request.request.length;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out_default_url<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_default_url<sp/>=<sp/>media_player_context-&gt;drm_request.default_URL;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>ProvideKeyResponse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>media_player_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MediaPlayerDRMIndex<sp/>drmIndex,<sp/>uint8_t<sp/>*response_message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>response_message_length)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_media_player_context" kindref="compound">MediaPlayerContext</ref>*<sp/>media_player_context<sp/>=<sp/>GetOrCreateMediaPlayerContextByID(media_player_id);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMByteArray*<sp/><sp/>drm_session_id_ptr;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaDRMByteArray<sp/><sp/><sp/>response<sp/>=<sp/>{<sp/>response_message,<sp/>response_message_length<sp/>};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_session_id_ptr<sp/>=<sp/>&amp;media_player_context-&gt;track_drm_session_id[drmIndex];</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>resources<sp/>for<sp/>the<sp/>request<sp/>message<sp/>since<sp/>we<sp/>are<sp/>now<sp/>providing<sp/>the<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MediaCAPI::MLMediaDRMRequestMessageRelease(&amp;media_player_context-&gt;drm_request);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MediaCAPI::MLMediaDRMProvideKeyResponse(media_player_context-&gt;drm_handle,<sp/>drm_session_id_ptr,<sp/>&amp;response,<sp/>&amp;media_player_context-&gt;drm_key_set_id);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>MLResult<sp/>UNITY_INTERFACE_EXPORT<sp/>UNITY_INTERFACE_API<sp/>PrepareDRM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>media_player_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MediaPlayerDRMIndex<sp/>drmIndex)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_media_player_context" kindref="compound">MediaPlayerContext</ref>*<sp/>media_player_context<sp/>=<sp/>GetOrCreateMediaPlayerContextByID(media_player_id);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MediaPlayerDRMIndex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drmIndexUsed<sp/>=<sp/>drmIndex;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLResult<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaPlayerTrackDRMSessionInfo<sp/>drm_session_info;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLMediaPlayerTrackDRMSessionInfoInit(&amp;drm_session_info);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_session_info.track_type<sp/>=<sp/>MediaPlayerDRMIndexToTrackType[drmIndexUsed];</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_session_info.uuid<sp/>=<sp/>&amp;media_player_context-&gt;track_drm_info[drmIndexUsed]-&gt;UUIDs[0];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drm_session_info.session_id<sp/>=<sp/>&amp;media_player_context-&gt;track_drm_session_id[drmIndexUsed];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>MediaCAPI::MLMediaPlayerPrepareTrackDRM(media_player_context-&gt;mediaplayer_handle,<sp/>&amp;drm_session_info);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>MLResult_Ok)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ML_LOG_TAG(Error,<sp/>_AppName,<sp/></highlight><highlight class="stringliteral">&quot;%s()<sp/>MediaPlayerContext<sp/>%d<sp/>failed<sp/>to<sp/>prepare<sp/>%s<sp/>DRM.<sp/>Error:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FUNCTION__,<sp/>media_player_context-&gt;media_player_id,<sp/>MediaPlayerDRMIndexToString[drmIndexUsed],<sp/>MLMediaResultGetString(result));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/svccontentjenkins/jenkins2/w/sdkdir/leapcore/frameworks/unity_integration/Source/Libs/LuminMediaPlayer/External/Apis/MediaPlayerPlugin/ml_mediaplayer_plugin_drm.cpp"/>
  </compounddef>
</doxygen>
