{
  "EnumerationTypes": {
    "ObservedGeometryCacheCaptureModes": {
      "Values": [
        "CameraFacing",
        "FullMesh",
        "FullBlock",
        "FullMeshFullBlock"
      ]
    },
    "CoPlanarRenderModes":{
      "Values": [
        "Outer",
        "OuterBoundary",
        "Inner",
        "InnerBoundary",
        "Holes",
        "BoundaryEdges",
        "ConvexHulls"
      ]
    },
    "CompositorModes": {
      "Values": [
        "Simulator",
        "MagicLeapOneCamera",
        "AlphaBlending"
      ]
    }
  },
  "PropertyCategories" : [
    {"Path":"Compositor", "Label":"Compositor" },
    {"Path":"CompositorSimulator", "Label":"Compositor - Simulator" },
    {"Path":"CompositorMagicLeapOneCamera", "Label":"Compositor - Magic Leap One Camera" },
    {"Path":"DeviceViewCamera", "Label":"Device View Camera" },
    {"Path":"EmptyRoom", "Label":"Empty Room" },
    {"Path":"SceneViewCamera", "Label":"Scene View Camera" },
    {"Path":"ObservedGeometry", "Label":"Observed Geometry Cache" },
    {"Path":"CoPlanar", "Label":"Co-Planar Extraction" },
    {"Path":"HeadposeGizmo", "Label":"Headpose Gizmo" },
    {"Path":"ImageTargetGizmos", "Label":"Image Target Gizmos" },
    {"Path":"InputControllerGizmos", "Label":"Input Controller Gizmos"},
    {"Path":"HandGestureGizmos", "Label":"Hand Gesture Gizmos"},
    {"Path":"PCF", "Label":"Persistent Coordinate Frames"},
    {"Path":"EyeFixationGizmo", "Label":"Eye Fixation Gizmo"}
  ],
  "ConfigurationProperties": {
    "CoPlanarMaxPlanarFeatures":{
      "Type": "integer",
      "Category": "CoPlanar",
      "Label": "Max Planar Features",
      "Description": "Defines the maximum number of co-planar features that can be generated by the virtual room server",
      "Default": 200,
      "UserVisible": false
    },
    "CoPlanarHalfThicknessThreshold": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Half-Thickness Threshold",
      "Description": "Defines the half thickness threshold for variance in points from the plane to be considered co-planar",
      "Default": 0.045,
      "UserVisible": false
    },
    "CoPlanarNormalThreshold": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Normal Threshold",
      "Description": "Defines the normal threshold for variance in face normals from the plane normal to be considered co-planar",
      "Default": 10.0,
      "UserVisible": false
    },
    "CoPlanarDistanceThreshold": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Distance Threshold",
      "Description": "Defines the distance threshold for points from the co-planar feature to be considered co-planar",
      "Default": 1.2,
      "UserVisible": false
    },
    "CoPlanarVerticalThreshold": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Vertical Threshold",
      "Description": "Defines the angular threshold in degrees a co-planar feature can be to be considered a vertical plane",
      "Default": 20.0,
      "UserVisible": false
    },
    "CoPlanarHorizontalThreshold": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Horizontal Threshold",
      "Description": "Defines the angular threshold in degrees a co-planar feature can be to be considered a horizontal plane",
      "Default": 20.0,
      "UserVisible": false
    },
    "CoPlanarMinOuterPlaneArea": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Min Outer Plane Area",
      "Description": "Defines the minimum area an outer co-planar feature must be to be considered valid",
      "Default": 0.5,
      "UserVisible": false
    },
    "CoPlanarMinHoleSize": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Min Hole Size",
      "Description": "Defines the minimum size a hole must be to be considered valid",
      "Default": 0.05,
      "UserVisible": false
    },
    "CoPlanarMinInnerPlaneArea": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Min Inner Plane Area",
      "Description": "Defines the minimum area an inner co-planar feature must be to be considered valid",
      "Default": 0.2,
      "UserVisible": false
    },
    "CoPlanarMinInnerPlaneSize": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Min Inner Plane Size",
      "Description": "Defines the minimum width and height an inner co-planar feature must be to be considered valid",
      "Default": 0.1,
      "UserVisible": false
    },
    "CoPlanarMinFragmentArea": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Min Fragment Area",
      "Description": "Defines the minimum area a co-planar feature must be to be considered for caching in the geometry cache block",
      "Default": 0.3,
      "UserVisible": false
    },
    "CoPlanarUpdateIntervalMs": {
      "Type": "integer",
      "Category": "CoPlanar",
      "Label": "Update Rate",
      "Description": "The update interval in milliseconds for co-planar feature query data",
      "Default": 500,
      "UserVisible": false
    },
    "CoPlanarSampleStepSize": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Sample Step Size",
      "Description": "The step size for inner co-planar planes sampling",
      "Default": 0.01,
      "LowerLimit" : 0.0001,
      "UpperLimit" : 0.1,
      "UserVisible": true
    },
    "CoPlanarSampleRotationStepSize": {
      "Type": "float",
      "Category": "CoPlanar",
      "Label": "Sample Rotation Step Size",
      "Description": "The rotation step size for inner co-planar planes sampling",
      "Default": 15.0,
      "LowerLimit" : 1.0,
      "UpperLimit" : 45.0,
      "UserVisible": true
    },
    "CoPlanarRenderMode": {
      "Type": "CoPlanarRenderModes",
      "Category": "CoPlanar",
      "Priority": 1,
      "Label": "Render Mode",
      "Description": "The render mode to use when Show co-planar eatures is enabled",
      "Default": "Outer"
    },
    "CoPlanarShowFeatures": {
      "Type": "boolean",
      "Category": "CoPlanar",
      "Label": "Show Co-Planar Features",  // keep this "redundant" word (the label is used in Gizmos menu)
      "Priority": 2,
      "Description": "When set, renders the observed co-planar features",
      "Default": false
    },
    "CoPlanarRenderUpdateIntervalMs":{
      "Type":"integer",
      "Category":"CoPlanar",
      "Label":"Render Rate",
      "Priority": 3,
      "Description": "The update interval in milliseconds for co-planar feature renderer updates (0 - inf)",
      "Default": 500,
      "LowerLimit": 0
    },
    "CoPlanarRenderOrientToGravity":{
      "Type": "boolean",
      "Category": "CoPlanar",
      "Priority": 5,
      "Label": "Orient To Gravity",
      "Description": "When set, renders the observed co-planar features oriented to gravity",
      "Default": true
    },
    "CoPlanarRenderWireframe":{
      "Type": "boolean",
      "Category": "CoPlanar",
      "Priority": 6,
      "Label": "Show Wireframe",
      "Description": "When set, renders the observed co-planar features in wireframe instead of solid planes",
      "Default": false
    },
    "CoPlanarRenderColor": {
      "Category": "CoPlanar",
      "Priority": 7,
      "Label": "Color",
      "Description": "Sets the color of the co-planar features",
      "Type": "rgb",
      "Default": [
        1.0,
        0.0,
        0.0
      ]
    },
    "CoPlanarRenderRandomizeColor": {
      "Category": "CoPlanar",
      "Priority": 8,
      "Label": "Randomize Color",
      "Description": "If toggled, randomizes the color of the co-planar features for each feature",
      "Type": "boolean",
      "Default": true
    },
    "ObservedGeometryCacheBlockSize": {
      "Type": "float",
      "Category": "ObservedGeometry",
      "Label": "Cache Block Size",
      "Description": "Defines the size of generated geometry cache blocks",
      "Default": 1.0,
      "UserVisible": false
    },
    "ObservedGeometryCacheCaptureMode": {
      "Type": "ObservedGeometryCacheCaptureModes",
      "Category": "ObservedGeometry",
      "Label": "Capture Mode",
      "Description": "Defines how the meshing camera generates its observed geometry cache as it scans the room",
      "Default": "CameraFacing"
    },
    "ObservedGeometryCacheCleanBlockColor": {
      "Category": "ObservedGeometry",
      "Label": "Fully Cached Color",
      "Description": "Sets the color of the fully cached meshing blocks",
      "Type": "rgb",
      "Default": [
        1.0,
        0.41,
        0.0
      ]
    },
    "ObservedGeometryCacheDirtyBlockColor": {
      "Category": "ObservedGeometry",
      "Label": "Partially Cached Color",
      "Description": "Sets the color of the partially cached meshing blocks",
      "Type": "rgb",
      "Default": [
        1.0,
        0.0,
        1.0
      ]
    },
    "ObservedGeometryCacheEmptyBlockColor": {
      "Category": "ObservedGeometry",
      "Label": "Empty Color",
      "Description": "Sets the color of the fully cached meshing blocks",
      "Type": "rgb",
      "Default": [
        0.42,
        0.46,
        1.0
      ]
    },
    "ObservedGeometryCacheDataColor": {
      "Category": "ObservedGeometry",
      "Label": "Cached Data Mesh Color",
      "Description": "Sets the color of the cached data when Render Observed Geometry is set",
      "Type": "rgb",
      "Default": [
        0.6,
        0.85,
        0.91
      ],
      "UserVisible": false
    },
    "ObservedGeometryShowCacheBlocks": {
      "Category": "ObservedGeometry",
      "Label": "Show Cache Grid",
      "Description": "When set, shows the Observed Geometry Grid",
      "Type": "boolean",
      "Default": false
    },
    "ObservedGeometryShowEmptyCacheBlocks": {
      "Category": "ObservedGeometry",
      "Label": "Show Empty Cache",
      "Description": "When set, shows the empty cache blocks when the Observed Geometry Render Grid setting is on",
      "Type": "boolean",
      "Default": false
    },
    "ObservedGeometryShowCacheData": {
      "Category": "ObservedGeometry",
      "Label": "Show Cache Block Data Mesh",
      "Description": "When set, shows the Observed Geometry Data Mesh",
      "Type": "boolean",
      "Default": false
    },
    "ObservedGeometryShowCacheDataUpdateIntervalMs": {
      "Category": "ObservedGeometry",
      "Label": "Show Cache Data Update Interval",
      "Description": "Time between updates for rendering cache data meshes in milliseconds",
      "Type": "integer",
      "Default": 500
    },
    "ObservedGeometryCacheDataRenderColor": {
      "Category": "ObservedGeometry",
      "Label": "Cache Block Data Mesh Color",
      "Description": "Sets the color of the cache block data mesh",
      "Type": "rgb",
      "Default": [
        1.0,
        1.0,
        1.0
      ]
    },
    "ObservedGeometryCacheDataRenderOnTop": {
      "Category": "ObservedGeometry",
      "Label": "Show Cache Block Data Mesh On Top",
      "Description": "Renders Observed Geometry Data Mesh in front of objects (no depth test)",
      "Type": "boolean",
      "Default": false
    },
    "ObservedGeometryCacheDataRenderPolygonOffset": {
      "Category": "ObservedGeometry",
      "Label": "Show Cache Block Data Polygon Offset",
      "Description": "The polygon offset difference for rendering cache data meshes",
      "Type": "float",
      "Default": 10.0,
      "UserVisible": false
    },
    "SceneViewClearColor": {
      "Category": "SceneViewCamera",
      "Label": "Clear Color",
      "Priority": 1,
      "Description": "Sets the background clear color of the scene view",
      "Type": "rgb",
      "Default": [
        0.2,
        0.2,
        0.2
      ]
    },
    "SceneViewCameraPosition": {
      "Category": "SceneViewCamera",
      "Label": "Starting Position",
      "Priority": 2,
      "Description": "Sets the scene view camera starting and reset position",
      "Type": "vec3",
      "Default": [
        0.0,
        5.0,
        3.0
      ]
    },
    "SceneViewCameraRotation": {
      "Category": "SceneViewCamera",
      "Label": "Starting Rotation",
      "Priority": 3,
      "Description": "Sets the scene view camera starting and reset rotation",
      "Type": "vec3",
      "Default": [
        -30.0,
        0.0,
        0.0
      ]
    },
    "MovementInitialVelocity": {
      "Category": "SceneViewCamera",
      "Label": "Movement Initial Velocity",
      "Description": "Initial velocity of the scene view camera movement",
      "Type": "float",
      "Priority": 4,
      "LowerLimit" : 0.0,
      "UpperLimit" : 5.0,
      "Default": 0.5
    },
    "MovementAcceleration": {
      "Category": "SceneViewCamera",
      "Label": "Movement Acceleration",
      "Description": "Acceleration rate of the scene view camera movement",
      "Type": "float",
      "Priority": 5,
      "Default": 10.0
    },
    "AccelerateMultiplier": {
      "Category": "SceneViewCamera",
      "Label": "Accelerate Multiplier",
      "Description": "Acceleration rate multiplier applied when the accelerate button [Default:Shift] is pressed",
      "Type": "float",
      "Priority": 6,
      "Default": 3.0
    },
    "MovementMaxVelocity": {
      "Category": "SceneViewCamera",
      "Label": "Max Movement Speed",
      "Description": "Max velocity of the scene view camera movement",
      "Type": "float",
      "Priority": 7,
      "Default": 50.0
    },
    "RotationSensitivity": {
      "Category": "SceneViewCamera",
      "Label": "Rotation Speed Scalar",
      "Description": "Multiplier for scene view camera rotation speed - negative values invert rotation direction",
      "Type": "float",
      "Priority": 8,
      "Default": 20.0
    },
    "PanningSensitivityX": {
      "Category": "SceneViewCamera",
      "Label": "X-Axis Panning Scalar",
      "Description": "Multiplier for scene view camera panning speed - negative values invert panning movement",
      "Type": "float",
      "Priority": 9,
      "Default": -1.0
    },
    "PanningSensitivityY": {
      "Category": "SceneViewCamera",
      "Label": "Y-Axis Panning Scalar",
      "Description": "Multiplier for scene view camera panning speed - negative values invert panning movement",
      "Type": "float",
      "Priority": 10,
      "Default": 1.0
    },
    "DragZoomSensitivity": {
      "Category": "SceneViewCamera",
      "Label": "Drag Zoom Multiplier",
      "Description": "Multiplier for scene view camera drag zoom speed - negative values invert drag zoom movement",
      "Type": "float",
      "Priority": 10,
      "Default": 1.0
    },
    "ScrollSensitivity": {
      "Category": "SceneViewCamera",
      "Label": "Scroll Wheel Multiplier",
      "Description": "Multiplier for scene view scroll wheel speed",
      "Type": "float",
      "Priority": 11,
      "Default": 70.0,
      "LowerLimit":1.0,
      "UpperLimit":100.0
    },
    "CompassGizmoEnabled": {
      "Label": "Show Compass",
      "Category":"SceneViewCamera",
      "Priority": 2,
      "Description": "Enables rendering of the compass in the scene view",
      "Type": "boolean",
      "Default": true
    },
    "CompassGizmoScreenSize": {
      "Label": "Compass Screen Size",
      "Category":"SceneViewCamera",
      "Priority": 100,
      "Description": "The screen size in pixels of the compass",
      "Type": "integer",
      "LowerLimit" : 50,
      "UpperLimit" : 500,
      "Default": 200
    },
    "ViewGridGizmoEnabled": {
      "Label": "Show View Grid",
      "Category":"SceneViewCamera",
      "Priority": 3,
      "Description": "Enables rendering of the view grid in the scene view",
      "Type": "boolean",
      "Default": true
    },
    "ViewGridColor": {
      "Label": "Grid Color",
      "Category":"SceneViewCamera",
      "Priority": 101,
      "Description": "Sets the color of the view grid lines",
      "Type": "rgb",
      "Default": [
        0.015,
        0.631,
        0.745
      ]
    },
    "ViewGridHeight": {
      "Label": "Grid Size",
      "Category":"SceneViewCamera",
      "Priority": 102,
      "Description": "Sets the height (Y-position) of the view grid",
      "Type": "float",
      "Default": 0.07
    },
    "ViewGridExpansion": {
      "Label": "View Grid Expansion",
      "Category": "SceneViewCamera",
      "Priority": 103,
      "Description": "Enables dynamic expansion of view grid with camera movement",
      "Type": "boolean",
      "Default": true
    },
    "RenderLightMesh": {
      "Label": "Show Light Mesh",
      "Category":"SceneViewCamera",
      "Priority": 104,
      "Description": "Renders the Light Mesh in the scene view",
      "Default": false
    },
    "SceneViewPivotPointEnabled": {
      "Category": "SceneViewCamera",
      "Label": "Show Pivot Point",
      "Priority": 4,
      "Description": "Enables rendering of the scene view camera's pivot point",
      "Type": "boolean",
      "Default": true
    },
    "MinPivotPointOffset": {
      "Category": "SceneViewCamera",
      "Label": "Min Pivot Point Offset",
      "Priority": 5,
      "Description": "Minimum offset of the pivot point, limiting pivot point from getting too close to the camera",
      "Type": "float",
      "Default": 0.2,
      "LowerLimit": 0.0,
      "UpperLimit": 2.0
    },
    "InitialPivotPointOffset": {
      "Category": "SceneViewCamera",
      "Label": "Initial Pivot Point Offset",
      "Priority": 5,
      "Description": "Initial offset of the pivot point, limiting pivot point from getting too close to the camera",
      "Type": "float",
      "Default": 5.0,
      "LowerLimit": 1.0
    },
    "PivotPointSize": {
      "Category": "SceneViewCamera",
      "Label": "Pivot Point Size",
      "Priority": 6,
      "Description": "Sets the size of the pivot point icon gizmo",
      "Type": "float",
      "Default": 0.1,
      "LowerLimit": 0.0,
      "UpperLimit": 1.0
    },
    "RedrawOnDemand": {
      "Label": "Redraw on Demand",
      "Category":"Compositor",
      "Description": "When set, only redraw scene and device view when changes are detected.  Can be turned off to test rendering performance.",
      "Type": "boolean",
      "Default": true
    },
    "CompositorMode": {
      "Type": "CompositorModes",
      "Category": "Compositor",
      "Label": "Compositor Mode",
      "Description": "Defines how the compositor should composite the frames",
      "Default": "Simulator"
    },
    "CompositorRoomDarknessBias": {
      "Label": "Room Darkness Bias",
      "Category":"Compositor",
      "Description": "Tells how much to darken the virtual room render before composition",
      "Type": "float",
      "Default": 0.3,
      "LowerLimit": 0.0,
      "UpperLimit": 1.0
    },
    "CompositorUserContentBrightnessBias": {
      "Label": "User Content Brightness Bias",
      "Category": "Compositor",
      "Description": "Tells how much to brighten the application content before composition",
      "Type": "float",
      "Default": 0.5,
      "LowerLimit": 0.0,
      "UpperLimit": 1.0
    },
    "CompositorUserContentGammaCorrection": {
      "Label": "User Content Gamma Correction",
      "Category": "CompositorSimulator",
      "Description": "Applies extra darkening to virtual room content overlaid by dark application content (0.00001 - inf)",
      "Type": "float",
      "Default": 2.2,
      "LowerLimit": 0.00001
    },
    "CompositorUserContentSaturationUsage": {
      "Label": "User Content Saturation Usage",
      "Category": "CompositorMagicLeapOneCamera",
      "Description": "Saturation-based boost usage",
      "Type": "float",
      "Default": 1.0,
      "LowerLimit": 0.0,
      "UpperLimit": 1.0
    },
    "CompositorUserContentSaturationBias": {
      "Label": "User Content Saturation Bias",
      "Category": "CompositorMagicLeapOneCamera",
      "Description": "Saturation bias (for lerping brightness boost)",
      "Type": "float",
      "Default": 5.0,
      "LowerLimit": 0.0,
      "UpperLimit": 20.0
    },
    "GlobalAmbientColor": {
      "Label": "Global Ambient Light Color",
      "Category":"Compositor",
      "Description": "The constant light value uniformly applied to all objects in the scene",
      "Type": "rgb",
      "Default": [
        0.1,
        0.1,
        0.1
      ]
    },
    "DeviceViewClearColor": {
      "Category": "DeviceViewCamera",
      "Label": "Clear Color",
      "Priority": 1,
      "Description": "Sets the background clear color of the device view",
      "Type": "rgb",
      "Default": [
        0.2,
        0.2,
        0.2
      ]
    },
    "DeviceViewCameraShowViewFrustum": {
      "Label": "Show View Frustum",
      "Category":"DeviceViewCamera",
      "Description": "Enables rendering of the device view frustum",
      "Type": "boolean",
      "Default": false
    },
    "DeviceViewCameraShowMeshingFrustum": {
      "Label": "Show Meshing Frustum",
      "Category":"DeviceViewCamera",
      "Description": "Enables rendering of the device meshing frustum",
      "Type": "boolean",
      "Default": true
    },
    "EyeFixationGizmoEnabled": {
      "Label": "Show Eye Fixation",
      "Category":"EyeFixationGizmo",
      "Priority": 1,
      "Description": "Enables rendering of the eye fixation gizmo",
      "Type": "boolean",
      "Default": true
    },
    "EyeFixationGizmoDiffuseColor": {
      "Label": "Gizmo Color",
      "Category":"EyeFixationGizmo",
      "Description": "Sets the color of the Eye Fixation Gizmo",
      "Type": "rgba",
      "Default": [
        0.67,
        0.43,
        0.91,
        1.0
      ]
    },
    "EyeFixationStartingPosition": {
      "Label": "Starting Position",
      "Category":"EyeFixationGizmo",
      "Priority": 1,
      "Description": "Sets the starting position (relative to the headpose) of the eye fixation gizmo",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        -1.5
      ]
    },
    "EyeFixationStartingRotation":{
      "Label": "Starting Rotation",
      "Category":"EyeFixationGizmo",
      "Priority": 2,
      "Description": "Sets the starting rotation (relative to the headpose) of the eye fixation gizmo",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        0.0
      ]
    },
    "EyeFixationEyeCenterOffset": {
      "Label": "Eye Center Offset",
      "Category":"EyeFixationGizmo",
      "Priority": 3,
      "Description": "Sets the offset (relative to head position) for the center of the eyes",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        -0.035
      ]
    },
    "EyeFixationGizmoHeadposeFollow": {
      "Label": "Follow Head Pose",
      "Category":"EyeFixationGizmo",
      "Priority": 6,
      "Description": "Keeps eye fixation point relative to headpose",
      "Type": "boolean",
      "Default": false
    },
    "EyeFixationHeadposeFOV": {
      "Label": "Constrain to FOV",
      "Category":"EyeFixationGizmo",
      "Priority": 5,
      "Description": "Keeps eye fixation within headpose field of view",
      "Type": "boolean",
      "Default": true
    },
    "EyeFixationGizmoSize": {
      "Label": "Gizmo Size",
      "Category":"EyeFixationGizmo",
      "Description": "Sets the size of the eye fixation gizmo",
      "Type": "float",
      "LowerLimit" : 0.01,
      "UpperLimit" : 0.5,
      "Default": 0.1
    },
    "EyeFixationGizmoGazeSize": {
      "Label": "Gaze Ray Size",
      "Category":"EyeFixationGizmo",
      "Priority": 9,
      "Description": "Sets the size of the eye fixation gaze ray",
      "Type": "float",
      "LowerLimit" : 0.01,
      "UpperLimit" : 0.5,
      "Default": 0.1
    },
    "EyeFixationGizmoIPD": {
      "Label": "Pupil Distance (IPD)",
      "Category":"EyeFixationGizmo",
      "Priority": 4,
      "Description": "Sets the Inter Pupillary Distance in millimeters",
      "Type": "integer",
      "LowerLimit" : 50,
      "UpperLimit" : 80,
      "Default": 64
    },
    "EyeFixationGizmoRenderGaze": {
      "Label": "Render Gaze Ray",
      "Category":"EyeFixationGizmo",
      "Priority": 8,
      "Description": "Enables rendering of the eye fixation gizmo gaze arrows from the eyes towards the eye fixation point",
      "Type": "boolean",
      "Default": false
    },
    "EyeFixationGizmoRenderInDeviceView": {
      "Label": "Render In Device View",
      "Category":"EyeFixationGizmo",
      "Priority": 7,
      "Description": "Enables rendering of the eye fixation gizmo in the device view",
      "Type": "boolean",
      "Default": false
    },
    "HandGestureGizmoDiffuseColor": {
      "Label": "Gizmo Color",
      "Category":"HandGestureGizmos",
      "Priority": 1,
      "Description": "Sets the color of the Hand Gesture Gizmos",
      "Type": "rgba",
      "Default": [
        0.67,
        0.43,
        0.91,
        1.0
      ]
    },
    "HandGestureClipToMeshingFOV": {
      "Label": "Constrain to FOV",
      "Category": "HandGestureGizmos",
      "Priority": 2,
      "Description": "Enables hand detection only within the meshing frustum",
      "Type": "boolean",
      "Default": false
    },
    "HandGestureGizmoRenderInDeviceView": {
      "Label": "Render In Device View",
      "Category":"HandGestureGizmos",
      "Priority": 3,
      "Description": "Enables rendering of the hand gesture gizmos in the device view",
      "Type": "boolean",
      "Default": true
    },
    "ImageTargetGizmoEnabled": {
      "Label": "Show Image Targets",
      "Category":"ImageTargetGizmos",
      "Priority": 1,
      "Description": "Enables rendering of the image target gizmos",
      "Type": "boolean",
      "Default": true
    },
    "ImageTargetStartingPosition": {
      "Label": "Starting Position",
      "Category":"ImageTargetGizmos",
      "Priority": 2,
      "Description": "Sets the starting position (relative to the headpose) of the image target gizmos",
      "Type": "vec3",
      "Default": [
        0.0,
        -0.18,
        -0.75
      ]
    },
    "ImageTargetStartingRotation":{
      "Label": "Starting Rotation",
      "Category":"ImageTargetGizmos",
      "Priority": 3,
      "Description": "Sets the starting rotation (relative to the headpose) of the image target gizmos",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        0.0
      ]
    },
    "ImageTargetHeadposeFollow": {
      "Label": "Follow Head Pose",
      "Category":"ImageTargetGizmos",
      "Priority": 1,
      "Description": "Enables the image target gizmo headpose follow mode (for all image targets)",
      "Type": "boolean",
      "Default": false
    },
    "ImageTargetGizmoNoImageSize": {
      "Label": "Unmapped Target Size",
      "Category": "ImageTargetGizmos",
      "Priority": 5,
      "Description": "Size of the image target gizmo when no target is assigned",
      "Type": "float",
      "LowerLimit" : 0.01,
      "UpperLimit" : 0.5,
      "Default": 0.1
    },
    "ImageTargetGizmoNoImageTrackedColor": {
      "Category": "ImageTargetGizmos",
      "Label": "Unmapped Target Tracked Color",
      "Priority": 10,
      "Description": "Sets the color of a tracked Image Tracker Gizmo with no assigned texture",
      "Type": "rgba",
      "Default": [
        1.0,
        0.0,
        0.0,
        1.0
      ]
    },
    "ImageTargetGizmoNoImageUntrackedColor": {
      "Category": "ImageTargetGizmos",
      "Label": "Unmapped Target Untracked Color",
      "Priority": 11,
      "Description": "Sets the color of a untracked Image Tracker Gizmo with no assigned texture",
      "Type": "rgba",
      "Default": [
        0.6,
        0.0,
        0.0,
        1.0
      ]
    },
    "ImageTargetGizmoTrackedColor": {
      "Category": "ImageTargetGizmos",
      "Label": "Target Tracked Color",
      "Priority": 12,
      "Description": "Sets the color of a tracked Image Tracker Gizmo with an assigned texture",
      "Type": "rgba",
      "Default": [
        1.0,
        1.0,
        1.0,
        1.0
      ]
    },
    "ImageTargetGizmoUntrackedColor": {
      "Category": "ImageTargetGizmos",
      "Label": "Target Untracked Color",
      "Priority": 13,
      "Description": "Sets the color of a untracked Image Tracker Gizmo with an assigned texture",
      "Type": "rgba",
      "Default": [
        0.6,
        0.6,
        0.6,
        1.0
      ]
    },
    "DefaultRoomPath": {
      "Label": "Default Room File Path",
      "Category": "EmptyRoom",
      "Priority": 1,
      "Description": "The default .Room file to load at startup",
      "Type": "Path",
      "Default": "",
      "Metadata": {
        "PathKind": "File",
        "PathMode": "Open",
        "RelativePathRoot": "ML_VDS_DATA"
      }
    },
    "SplashModelScale": {
      "Category": "EmptyRoom",
      "Label": "Model Scale",
      "Priority": 4,
      "Description": "Sets the scale of the empty room model",
      "Type": "vec3",
      "Default": [
        0.1,
        0.1,
        0.1
      ]
    },
    "SplashModelRotation": {
      "Category": "EmptyRoom",
      "Label": "Model Rotation",
      "Priority": 3,
      "Description": "Sets the euler rotation of the empty room model",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        0.0
      ]
    },
    "SplashModelPosition": {
      "Category": "EmptyRoom",
      "Label": "Model Position",
      "Priority": 2,
      "Description": "Sets the position of the empty room model",
      "Type": "vec3",
      "Default": [
        -0.25,
        2.0,
        -10.0
      ]
    },
    "HeadposeGizmoEnabled": {
      "Label": "Show Wearable",
      "Category":"HeadposeGizmo",
      "Priority": 1,
      "Description": "Enables rendering of the headpose gizmo",
      "Type": "boolean",
      "Default": true
    },
    "HeadposeStartingPosition": {
      "Label": "Starting Position",
      "Category":"HeadposeGizmo",
      "Priority": 2,
      "Description": "Sets the starting and reset position of the headpose gizmo",
      "Type": "vec3",
      "Default": [
        0.0,
        2.0,
        0.0
      ]
    },
    "HeadposeStartingRotation": {
      "Label": "Starting Rotation",
      "Category":"HeadposeGizmo",
      "Priority": 3,
      "Description": "Sets the starting and reset rotation of the headpose gizmo",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        0.0
      ]
    },
    "InputControllerGizmoEnabled": {
      "Label": "Show Controls",
      "Category":"InputControllerGizmos",
      "Priority": 1,
      "Description": "Enables rendering of the input controller gizmo",
      "Type": "boolean",
      "Default": true
    },
    "InputController0Color": {
      "Category": "InputControllerGizmos",
      "Label": "Control 1 Color",
      "Priority": 4,
      "Description": "Sets the color of the control 1 gizmo",
      "Type": "rgb",
      "Default": [
        0.5,
        0.5,
        0.5
      ]
    },
    "InputController0StartingPosition": {
      "Label": "Control 1 Starting Position Offset",
      "Category":"InputControllerGizmos",
      "Priority": 2,
      "Description": "Sets the starting position (relative to the headpose) of the control 1 gizmo",
      "Type": "vec3",
      "Default": [
        -0.1,
        -0.18,
        -0.75
      ]
    },
    "InputController0StartingRotation": {
      "Label": "Control 1 Starting Rotation Offset",
      "Category":"InputControllerGizmos",
      "Priority": 3,
      "Description": "Sets the starting rotation (relative to the headpose) of the control 1 gizmo",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        0.0
      ]
    },
    "InputController0HeadposeFollow": {
      "Label": "Follow Head Pose",
      "Category":"InputControllerGizmos",
      "Priority": 1,
      "Description": "Enables the control 1 gizmo headpose follow mode",
      "Type": "boolean",
      "Default": false
    },
    "InputController1Color": {
      "Category": "InputControllerGizmos",
      "Label": "Control 2 Color",
      "Priority": 14,
      "Description": "Sets the color of the control 2 gizmo",
      "Type": "rgb",
      "Default": [
        0.5,
        0.5,
        0.5
      ]
    },
    "InputController1StartingPosition": {
      "Label": "Control 2 Starting Position Offset",
      "Category":"InputControllerGizmos",
      "Priority": 11,
      "Description": "Sets the starting position (relative to the headpose) of the control 2 gizmo",
      "Type": "vec3",
      "Default": [
        0.1,
        -0.18,
        -0.75
      ]
    },
    "InputController1StartingRotation": {
      "Label": "Control 2 Starting Rotation Offset",
      "Category":"InputControllerGizmos",
      "Priority": 12,
      "Description": "Sets the starting rotation (relative to the headpose) of the control 2 gizmo",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        0.0
      ]
    },
    "InputController1HeadposeFollow": {
      "Label": "Follow Head Pose",
      "Category":"InputControllerGizmos",
      "Priority": 13,
      "Description": "Enables the control 2 gizmo headpose follow mode",
      "Type": "boolean",
      "Default": false
    },
    "HandGestureGizmoEnabled": {
      "Label": "Show Hands",
      "Category":"HandGestureGizmos",
      "Priority": 1,
      "Description": "Enables rendering of the hand gesture gizmo",
      "Type": "boolean",
      "Default": true
    },
    "LeftHandGestureStartingPosition": {
      "Label": "Left Hand Starting Position Offset",
      "Category":"HandGestureGizmos",
      "Description": "Sets the starting position (relative to the headpose) of the left hand gesture gizmo",
      "Type": "vec3",
      "Default": [
        -0.2,
        -0.18,
        -0.75
      ]
    },
    "LeftHandGestureStartingRotation":{
      "Label": "Left Hand Starting Rotation Offset",
      "Category":"HandGestureGizmos",
      "Description": "Sets the starting rotation (relative to the headpose) of the left hand gesture gizmo",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        0.0
      ]
    },
    "LeftHandGestureHeadposeFollow": {
      "Label": "Follow Head Pose",
      "Category":"HandGestureGizmos",
      "Description": "Enables the left hand gesture gizmo headpose follow mode",
      "Type": "boolean",
      "Default": false
    },
    "RightHandGestureStartingPosition": {
      "Label": "Right Hand Starting Position Offset",
      "Category":"HandGestureGizmos",
      "Description": "Sets the starting position (relative to the headpose) of the right hand gesture gizmo",
      "Type": "vec3",
      "Default": [
        0.2,
        -0.18,
        -0.75
      ]
    },
    "RightHandGestureStartingRotation":{
      "Label": "Right Hand Starting Rotation Offset",
      "Category":"HandGestureGizmos",
      "Description": "Sets the starting rotation (relative to the headpose) of the right hand gesture gizmo",
      "Type": "vec3",
      "Default": [
        0.0,
        0.0,
        0.0
      ]
    },
    "RightHandGestureHeadposeFollow": {
      "Label": "Follow Head Pose",
      "Category":"HandGestureGizmos",
      "Description": "Enables the right hand gesture gizmo headpose follow mode",
      "Type": "boolean",
      "Default": false
    },
    "RenderPCFNodes":{
      "Label": "Show PCF Nodes",  // keep "redundant" name since this is used in Gizmos menu
      "Category":"PCF",
      "Description": "Enables rendering of PCF Nodes in the scene view",
      "Type": "boolean",
      "Default": true
    },
    "PCFNodeColor": {
      "Label": "Color",
      "Category":"PCF",
      "Description": "Sets the color of the PCF Nodes",
      "Type": "rgb",
      "Default": [
        0.4,
        1.0,
        0.8
      ]
    },
    "PCFNodeScale": {
      "Label": "Scale",
      "Category":"PCF",
      "Description": "Sets the scale of the PCF Nodes",
      "Type": "vec3",
      "Default": [
        0.1,
        0.1,
        0.1
      ]
    },
    "PCFMinSpawnDistance": {
      "Label": "Spawn Distance",
      "Category":"PCF",
      "Description": "Sets the min spawn distance between PCF Nodes",
      "Type": "float",
      "Default": 3.0
    },
    "MoveSnapSize": {
      "Label": "Move Snap Size",
      "Description": "Sets the alignment in world units when moving nodes and snapping is activated",
      "Type": "float",
      "LowerLimit" : 0.1,
      "UpperLimit" : 10.0,
      "Default": 1.0
    },
    "RotateSnapAngle": {
      "Label": "Rotate Snap Angle",
      "Description": "Sets the alignment in degrees when rotating nodes and snapping is activated",
      "Type": "integer",
      "LowerLimit": 1,
      "UpperLimit": 180,
      "Default": 30
    },
    "ScaleSnapSize": {
      "Label": "Scale Snap Size",
      "Description": "Sets the alignment in world units when scaling nodes and snapping is activated",
      "Type": "float",
      "LowerLimit" : 0.1,
      "UpperLimit" : 10.0,
      "Default": 1.0
    }
  }
}
